/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import daos.FreteDao;
import daos.ViagemDao;
import entidades.Frete;
import entidades.FreteViagem;
import entidades.Programas;
import entidades.Viagem;
import java.awt.Dimension;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import log4j.Log4J;
import permissao.Controle;
import transoft.TranSOFT;
import util.FormataCampo;
import util.Formatacao;
import util.MediaPlayer;
import util.SocketData;

/**
 *
 * @author ramon
 */
public class IfrChegadaSaida extends javax.swing.JInternalFrame {

    private final Programas telaAtual = new Programas(0, "Chegada Saída de Frete", "IfrChegadaSaida");

    /**
     * Creates new form IfrChegadaSaida
     */
    public IfrChegadaSaida() {
        initComponents();
        ViagemDao.popularTabelaChegada(tblChegada);
        ViagemDao.popularTabelaSaida(tblSaida);
        Controle.permissiona(jTabbedPane1, telaAtual);
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChegada = new javax.swing.JTable();
        btnRegistrarChegada = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfdQuilometragem = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSaida = new javax.swing.JTable();
        btnRegistrarSaida = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();

        setTitle("Chegada/Saída");

        tblChegada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Veículo", "Origem", "Data Saída"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblChegada);

        btnRegistrarChegada.setText("Registrar Chegada");
        btnRegistrarChegada.setEnabled(false);
        btnRegistrarChegada.setName("btnRegistrarChegada"); // NOI18N
        btnRegistrarChegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarChegadaActionPerformed(evt);
            }
        });

        jLabel1.setText("<html>Quilometragem Percorrida:<font color = red>*</font></html>");

        tfdQuilometragem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdQuilometragemKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfdQuilometragemKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdQuilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegistrarChegada)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrarChegada)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdQuilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Chegada", jPanel1);

        tblSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Veículo", "Destino"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSaida);

        btnRegistrarSaida.setText("Registrar Saída");
        btnRegistrarSaida.setEnabled(false);
        btnRegistrarSaida.setName("btnRegistrarSaida"); // NOI18N
        btnRegistrarSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarSaidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegistrarSaida)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrarSaida)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Saída", jPanel2);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnRegistrarSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarSaidaActionPerformed
        try {
            int idViagem = Integer.parseInt(String.valueOf(tblSaida.getValueAt(tblSaida.getSelectedRow(), 0)));
            Viagem saida = ViagemDao.buscaId(idViagem);
            saida.setUsuario(TranSOFT.USUARIO);
            saida.setDataInicio(new Date());

            if (ViagemDao.salvar(saida).equals("Sucesso")) {
                try {
                    sendNotification("<html><b>Uma viagem saiu para entrega</b></html>", idViagem);
                } catch (Exception ex) {
                    System.out.println(ex);
                    Logger.getLogger(IfrChegadaSaida.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Saída registrada!");
                DefaultTableModel modelRemover = (DefaultTableModel) tblSaida.getModel();
                modelRemover.removeRow(tblSaida.getSelectedRow());
                tblSaida.setModel(modelRemover);
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Escolha a viagem para dar SAÍDA!");
        }
    }//GEN-LAST:event_btnRegistrarSaidaActionPerformed

    private void tfdQuilometragemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdQuilometragemKeyPressed
        FormataCampo.bloquearColar(evt);
    }//GEN-LAST:event_tfdQuilometragemKeyPressed

    private void tfdQuilometragemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdQuilometragemKeyTyped
        FormataCampo.somenteNumeros(evt);
    }//GEN-LAST:event_tfdQuilometragemKeyTyped

    private void btnRegistrarChegadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarChegadaActionPerformed
        if (tfdQuilometragem.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preecha a Quilometragem da Viagem!");
        } else {
            try {
                int idViagem = Integer.parseInt(String.valueOf(tblChegada.getValueAt(tblChegada.getSelectedRow(), 0)));
                Viagem chegada = ViagemDao.buscaId(idViagem);
                chegada.setDataFinal(new Date());
                chegada.setQuilometragem(BigDecimal.valueOf(Double.valueOf(tfdQuilometragem.getText())));

                String erro = "";

                Iterator<FreteViagem> freteAsIterator = chegada.getFreteViagems().iterator();
                while (freteAsIterator.hasNext() && erro.isEmpty()) {
                    FreteViagem fv = freteAsIterator.next();
                    Frete f = fv.getFrete();
                    f.setUnidadeAtual(TranSOFT.UNIDADE);
                    if (!FreteDao.salvar(f).equals("Sucesso")) {
                        erro = "Falha ao atualizar Fretes da Viagem";
                    }
                }

                if (erro.isEmpty()) {
                    if (ViagemDao.salvar(chegada).equals("Sucesso")) {
                        try {
                            sendNotification("<html><b>Uma viagem chegou ao destino</b></html>", idViagem);
                        } catch (Exception ex) {
                            System.out.println(ex);
                            Logger.getLogger(IfrChegadaSaida.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(this, "Chegada registrada!");
                        DefaultTableModel modelRemover = (DefaultTableModel) tblChegada.getModel();
                        modelRemover.removeRow(tblChegada.getSelectedRow());
                        tblChegada.setModel(modelRemover);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, erro);
                }
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Escolha a viagem para dar CHEGADA!");
            }
        }
    }//GEN-LAST:event_btnRegistrarChegadaActionPerformed

    public void sendNotification(String notificacao, int idViagem) throws Exception {
        MediaPlayer.wellcome();
        Log4J.getServer().send(new SocketData(notificacao, new Date(), idViagem));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRegistrarChegada;
    private javax.swing.JButton btnRegistrarSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblChegada;
    private javax.swing.JTable tblSaida;
    private javax.swing.JTextField tfdQuilometragem;
    // End of variables declaration//GEN-END:variables
}
