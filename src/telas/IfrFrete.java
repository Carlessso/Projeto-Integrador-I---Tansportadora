/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import daos.EnderecoDao;
import daos.EstadoFreteDao;
import daos.FreteDao;
import daos.ProdutosFreteDao;
import entidades.ComboItens;
import entidades.Endereco;
import entidades.Frete;
import entidades.Pessoa;
import entidades.ProdutosFrete;
import entidades.Programas;
import entidades.Quilometragem;
import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import permissao.Controle;
import transoft.TranSOFT;
import util.ClientWS;
import util.FormataCampo;
import util.Formatacao;

/**
 *
 * @author ramon
 */
public class IfrFrete extends javax.swing.JInternalFrame {

    private Pessoa remetente;
    private Pessoa destinatario;
    private int linhaProduto;
    private Quilometragem quilometragem;
    private Frete frete;
    private ArrayList<Integer> produtosExclusao;
    private final Programas telaAtual = new Programas(0, "Frete", "IfrFrete");

    /**
     * Creates new form IfrFrete
     */
    public IfrFrete() {
        initComponents();
        EstadoFreteDao.populaCombo(cbEstado);
        this.remetente = null;
        this.destinatario = null;
        this.linhaProduto = -1;
        this.quilometragem = new Quilometragem();
        this.frete = new Frete();
        this.frete.setUnidadeAtual(TranSOFT.UNIDADE);
        this.frete.setDataPedido(new Date());
        this.produtosExclusao = new ArrayList<>();
        Controle.permissiona(jTabbedPane1, telaAtual);
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfdRemetente = new javax.swing.JTextField();
        cbEndRemetente = new javax.swing.JComboBox<>();
        tfdDestinatario = new javax.swing.JTextField();
        cbEndDestinatario = new javax.swing.JComboBox<>();
        cbEstado = new javax.swing.JComboBox<>();
        btnSelecionarRemetente = new javax.swing.JButton();
        btnSelecionarDestinatario = new javax.swing.JButton();
        tfdValorFrete = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfdDescricao = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfdValorProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfdPeso = new javax.swing.JTextField();
        btnSalvarProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        tfdDistancia = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfdTempo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        tfdConsulta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFrete = new javax.swing.JTable();
        btnEditar1 = new javax.swing.JButton();
        btnExportarXML = new javax.swing.JButton();
        btnImportarXML = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();

        setTitle("Cadastro de Frete");

        jLabel1.setText("<html>Remetente:<font color = red>*</font></html>");

        jLabel2.setText("<html>Destinatário:<font color = red>*</font></html>");

        jLabel3.setText("<html>Estado:<font color = red>*</font></html>");

        jLabel4.setText("<html>Valor:<font color = red>*</font></html>");

        jLabel5.setText("<html>Endereço:<font color = red>*</font></html>");

        jLabel6.setText("<html>Endereço:<font color = red>*</font></html>");

        tfdRemetente.setEnabled(false);

        tfdDestinatario.setEnabled(false);

        cbEndDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEndDestinatarioActionPerformed(evt);
            }
        });

        btnSelecionarRemetente.setText("Selecionar");
        btnSelecionarRemetente.setEnabled(false);
        btnSelecionarRemetente.setName("btnSelecionarRemetente"); // NOI18N
        btnSelecionarRemetente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarRemetenteActionPerformed(evt);
            }
        });

        btnSelecionarDestinatario.setText("Selecionar");
        btnSelecionarDestinatario.setEnabled(false);
        btnSelecionarDestinatario.setName("btnSelecionarDestinatario"); // NOI18N
        btnSelecionarDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarDestinatarioActionPerformed(evt);
            }
        });

        tfdValorFrete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfdValorFreteKeyTyped(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.setName("btnSalvar"); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel7.setText("<html>Produto:<font color = red>*</font></html>");

        jLabel8.setText("<html>Descrição:<font color = red>*</font></html>");

        jLabel9.setText("<html>Valor:<font color = red>*</font></html>");

        tfdValorProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfdValorProdutoKeyTyped(evt);
            }
        });

        jLabel10.setText("<html>Peso:<font color = red>*</font></html>");

        tfdPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfdPesoKeyTyped(evt);
            }
        });

        btnSalvarProduto.setText("Salvar");
        btnSalvarProduto.setEnabled(false);
        btnSalvarProduto.setName("btnSalvarProduto"); // NOI18N
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descrição", "Valor (R$)", "Peso (KG)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduto);
        if (tblProduto.getColumnModel().getColumnCount() > 0) {
            tblProduto.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblProduto.getColumnModel().getColumn(1).setPreferredWidth(300);
            tblProduto.getColumnModel().getColumn(2).setPreferredWidth(125);
            tblProduto.getColumnModel().getColumn(3).setPreferredWidth(125);
        }

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.setName("btnEditar"); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.setEnabled(false);
        btnRemover.setName("btnRemover"); // NOI18N
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel11.setText("Distância:");

        tfdDistancia.setEnabled(false);

        jLabel12.setText("Tempo:");

        tfdTempo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfdRemetente)
                                    .addComponent(cbEndRemetente, 0, 311, Short.MAX_VALUE)
                                    .addComponent(tfdDestinatario)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfdDescricao)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tfdValorProduto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfdPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbEndDestinatario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfdDistancia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                            .addComponent(tfdValorFrete, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfdTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSalvar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSalvarProduto)
                                    .addComponent(btnSelecionarDestinatario, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(btnSelecionarRemetente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRemover)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 204, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarRemetente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEndRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarDestinatario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEndDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfdDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tfdTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdValorFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jLabel16.setText("Remetente");

        btnBuscar.setText("Buscar");
        btnBuscar.setEnabled(false);
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblFrete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Remetente", "Destinatário", "Data Inicial", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFrete);

        btnEditar1.setText("Editar");
        btnEditar1.setEnabled(false);
        btnEditar1.setName("btnEditar1"); // NOI18N
        btnEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditar1ActionPerformed(evt);
            }
        });

        btnExportarXML.setText("Exportar XML");
        btnExportarXML.setEnabled(false);
        btnExportarXML.setName("btnExportarXML"); // NOI18N
        btnExportarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarXMLActionPerformed(evt);
            }
        });

        btnImportarXML.setText("Importar XML");
        btnImportarXML.setEnabled(false);
        btnImportarXML.setName("btnImportarXML"); // NOI18N
        btnImportarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnImportarXML)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExportarXML)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar1)
                    .addComponent(btnExportarXML)
                    .addComponent(btnImportarXML))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        String erro = validarProduto();
        if (erro.isEmpty()) {
            if (this.linhaProduto < 0) {
                DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();

                Object[] linha = {"", tfdDescricao.getText(), tfdValorProduto.getText(), tfdPeso.getText()};

                model.addRow(linha);
            } else {
                tblProduto.setValueAt(tfdDescricao.getText(), 0, 1);
                tblProduto.setValueAt(tfdValorProduto.getText(), 0, 2);
                tblProduto.setValueAt(tfdPeso.getText(), 0, 3);

                this.linhaProduto = -1;
            }
            calculaValor();

            tfdDescricao.setText("");
            tfdValorProduto.setText("");
            tfdPeso.setText("");
        } else {
            JOptionPane.showMessageDialog(this, erro);
        }
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        if (tblProduto.getSelectedRow() >= 0) {
            String id = String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 0));
            if (!id.isEmpty()) {
                produtosExclusao.add(Integer.parseInt(id));
            }
            model.removeRow(tblProduto.getSelectedRow());
            tblProduto.setModel(model);
        } else {
            JOptionPane.showMessageDialog(null, "Favor selecionar um produto para remover!");
        }
        calculaValor();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblProduto.getSelectedRow() >= 0) {
            this.linhaProduto = tblProduto.getSelectedRow();
            tfdDescricao.setText(String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 1)));
            tfdValorProduto.setText(String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 2)));
            tfdPeso.setText(String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 3)));
        } else {
            JOptionPane.showMessageDialog(null, "Favor selecionar um produto para editar!");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSelecionarRemetenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarRemetenteActionPerformed
        JdgBuscaPessoa busca = new JdgBuscaPessoa();
        busca.setModal(true);
        busca.setVisible(true);
        Pessoa p = busca.getPessoaSelecionada();
        if (p != null) {
            this.remetente = p;
            tfdRemetente.setText(p.getNome());
            EnderecoDao.populaCombo(cbEndRemetente, this.remetente);
        } else {
            calculaValor();
        }
    }//GEN-LAST:event_btnSelecionarRemetenteActionPerformed

    private void btnSelecionarDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarDestinatarioActionPerformed
        JdgBuscaPessoa busca = new JdgBuscaPessoa();
        busca.setModal(true);
        busca.setVisible(true);
        Pessoa p = busca.getPessoaSelecionada();
        if (p != null) {
            this.destinatario = p;
            tfdDestinatario.setText(p.getNome());
            EnderecoDao.populaCombo(cbEndDestinatario, this.destinatario);
        }
        calculaValor();
    }//GEN-LAST:event_btnSelecionarDestinatarioActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void tfdValorProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdValorProdutoKeyTyped
        FormataCampo.formataValor(tfdValorProduto, evt);
    }//GEN-LAST:event_tfdValorProdutoKeyTyped

    private void tfdPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdPesoKeyTyped
        FormataCampo.formataValor(tfdPeso, evt);
    }//GEN-LAST:event_tfdPesoKeyTyped

    private void tfdValorFreteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdValorFreteKeyTyped
        FormataCampo.formataValor(tfdValorFrete, evt);
    }//GEN-LAST:event_tfdValorFreteKeyTyped

    private void cbEndDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEndDestinatarioActionPerformed
        calculaValor();
    }//GEN-LAST:event_cbEndDestinatarioActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String erro = validarDados();

        if (tfdValorFrete.getText().isEmpty()) {
            erro = erro + "Insira o valor do frete!";
        }

        if (erro.isEmpty()) {
            Frete f = new Frete();
            f.setId(frete.getId());
            f.setUnidade(TranSOFT.UNIDADE);
            f.setEndereco(EnderecoDao.buscaId(((ComboItens) cbEndDestinatario.getSelectedItem()).getCodigo()));
            f.setPessoaByRefSolicitante(remetente);
            f.setPessoaByRefDetinatario(destinatario);
            f.setUsuario(TranSOFT.USUARIO);
            f.setValor(BigDecimal.valueOf(Double.parseDouble(tfdValorFrete.getText().replace(',', '.'))));
            f.setDataPedido(frete.getDataPedido());
            f.setDataEntrega(frete.getDataEntrega());
            f.setUnidadeAtual(frete.getUnidadeAtual());
            f.setEstadoFrete(EstadoFreteDao.buscaId(((ComboItens) cbEstado.getSelectedItem()).getCodigo()));
            f.setQuilometragem(quilometragem.getQuilometragem());
            f.setMetragem(quilometragem.getMetragem());
            f.setTempo(quilometragem.getTempo());

            if (FreteDao.salvar(f).equals("Sucesso")) {
                for (int i = 0; i < tblProduto.getRowCount(); i++) {
                    ProdutosFrete p = new ProdutosFrete();
                    String id = String.valueOf(tblProduto.getValueAt(i, 0));
                    if (!id.isEmpty()) {
                        p.setId(Integer.parseInt(id));
                    }
                    p.setDescricao(String.valueOf(tblProduto.getValueAt(i, 1)));
                    p.setValor(BigDecimal.valueOf(Double.parseDouble(String.valueOf(tblProduto.getValueAt(i, 2)).replace(',', '.'))));
                    p.setPeso(BigDecimal.valueOf(Double.parseDouble(String.valueOf(tblProduto.getValueAt(i, 3)).replace(',', '.'))));
                    p.setFrete(f);
                    if (ProdutosFreteDao.salvar(p).equals("Erro ao salvar")) {
                        erro = erro + "Erro ao salvar o produto: " + p.getDescricao() + "\n";
                    }
                }
                for (int i = 0; i < produtosExclusao.size(); i++) {
                    ProdutosFrete p = ProdutosFreteDao.buscaId(produtosExclusao.get(i));
                    if (ProdutosFreteDao.deletar(p).equals("Erro ao deletar")) {
                        erro = erro + "Erro ao excluir o produto";
                    }
                }
                if (erro.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Sucesso ao salvar Frete!");
                    limparDados();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao salvar Frete!\n" + erro);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar Frete!");
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        FreteDao.popularTabelaFiltro(tblFrete, tfdConsulta.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditar1ActionPerformed
        try {
            btnSalvar.setEnabled(true);
            this.limparDados();
            int idFrete = Integer.parseInt(String.valueOf(tblFrete.getValueAt(tblFrete.getSelectedRow(), 0)));
            this.frete = FreteDao.buscaId(idFrete);
            this.remetente = frete.getPessoaByRefSolicitante();
            tfdRemetente.setText(remetente.getNome());
            EnderecoDao.populaCombo(cbEndRemetente, remetente);

            this.destinatario = frete.getPessoaByRefDetinatario();
            tfdDestinatario.setText(destinatario.getNome());
            EnderecoDao.populaCombo(cbEndDestinatario, destinatario);

            for (int i = 0; i < cbEndDestinatario.getItemCount(); i++) {
                if (cbEndDestinatario.getItemAt(i).getCodigo() == frete.getEndereco().getId()) {
                    cbEndDestinatario.setSelectedIndex(i);
                    i = cbEndDestinatario.getItemCount();
                }
            }

            for (int i = 0; i < cbEstado.getItemCount(); i++) {
                if (cbEstado.getItemAt(i).getDescricao().equals(frete.getEstadoFrete().getDescricao())) {
                    cbEstado.setSelectedIndex(i);
                    i = cbEstado.getItemCount();
                }
            }

            DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();

            Iterator<ProdutosFrete> produtosFreteAsIterator = frete.getProdutosFretes().iterator();
            while (produtosFreteAsIterator.hasNext()) {
                ProdutosFrete pf = produtosFreteAsIterator.next();
                Object[] linha = {pf.getId(), pf.getDescricao(), Formatacao.decimalParaString(pf.getValor()), Formatacao.decimalParaString(pf.getPeso())};
                model.addRow(linha);
            }

            tfdDistancia.setText(frete.getQuilometragem());
            tfdTempo.setText(frete.getTempo());
            tfdValorFrete.setText(Formatacao.decimalParaString(frete.getValor()));

            btnSalvar.setEnabled(true);

            jTabbedPane1.setSelectedIndex(0);
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Escolha o frete a ser EDITADO!");
        }
    }//GEN-LAST:event_btnEditar1ActionPerformed

    private void btnExportarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarXMLActionPerformed
        try {
            int idFrete = Integer.parseInt(String.valueOf(tblFrete.getValueAt(tblFrete.getSelectedRow(), 0)));
            Frete frete = FreteDao.buscaId(idFrete);

            XStream xstream = new XStream();

            BufferedWriter writer = new BufferedWriter(new FileWriter("fretes\\frete" + idFrete + ".xml"));
            writer.write(xstream.toXML(frete)); //salva fisicamente
            writer.close();
            JOptionPane.showMessageDialog(this, "Frete exportado com Sucesso!");
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Escolha o frete a ser EXPORTADO!");
        }
    }//GEN-LAST:event_btnExportarXMLActionPerformed

    private void btnImportarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarXMLActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("XML", "xml"));
        int result = fileChooser.showOpenDialog(this);
        File file = null;
        if (result == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
        }

        if (file != null) {
            try {
                FileInputStream fis = new FileInputStream(file);
                //create FileInputStream which obtains input bytes from a file in a file system
                //FileInputStream is meant for reading streams of raw bytes such as image data. For reading streams of characters, consider using FileReader.
                XStream xstream = new XStream(new DomDriver());
                Frete frete = (Frete) xstream.fromXML(fis);
                if (FreteDao.salvar(frete).equalsIgnoreCase("Sucesso")) {
                    String erro = "";
                    Iterator<ProdutosFrete> produtosFreteAsIterator = frete.getProdutosFretes().iterator();
                    while (produtosFreteAsIterator.hasNext()) {
                        ProdutosFrete pf = produtosFreteAsIterator.next();

                        if (!ProdutosFreteDao.salvar(pf).equals("Sucesso")) {
                            erro = "Erro ao salvar Produtos!";
                        }
                    }
                    if (erro.isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Frete importado com Sucesso!");
                    } else {
                        JOptionPane.showMessageDialog(this, erro);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao importar Frete!");
                }
            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Falha ao importar Frete!");
                return;
            }
        }
    }//GEN-LAST:event_btnImportarXMLActionPerformed

    private void calculaValor() {
        if (validarDados().isEmpty()) {
            Endereco endOrigem = TranSOFT.UNIDADE.getEndereco();
            Endereco endDestinatario = EnderecoDao.buscaId(((ComboItens) cbEndDestinatario.getSelectedItem()).getCodigo());
            this.quilometragem = ClientWS.quilometragemXML(ClientWS.recebeWS(endOrigem.getCep(), endDestinatario.getCep()));

            tfdDistancia.setText(quilometragem.getQuilometragem());
            tfdTempo.setText(quilometragem.getTempo());

            Double valor;
            valor = 0.00003 * quilometragem.getMetragem();
            if (valor < 20) {
                valor = 20.0;
            }
            for (int i = 0; i < tblProduto.getRowCount(); i++) {
                Double peso = Double.parseDouble(tblProduto.getValueAt(i, 3).toString().replace(',', '.'));
                valor = valor + peso * 2;
            }

            tfdValorFrete.setText(Formatacao.formatarDecimal(valor));

            if (this.quilometragem.getOrigem().isEmpty()) {
                tfdValorFrete.setText("");
                JOptionPane.showMessageDialog(this, "Erro na verificação da quilometragem, defina o valor manualmente!");
            }
        }
    }

    private String validarProduto() {
        String erro = "";
        if (tfdDescricao.getText().trim().isEmpty()) {
            erro = erro + "Insira a descrição do produto!\n";
        }
        if (tfdValorProduto.getText().isEmpty()) {
            erro = erro + "Insira o valor do produto!\n";
        }
        if (tfdPeso.getText().isEmpty()) {
            erro = erro + "Insira o peso do produto!\n";
        }

        return erro;
    }

    private String validarDados() {
        String erro = "";

        if (cbEndRemetente.getItemCount() == 0) {
            erro = erro + "Remetente sem endereço!\n";
        }

        if (cbEndDestinatario.getItemCount() == 0) {
            erro = erro + "Destinatário sem endereço!\n";
        }

        if (tblProduto.getRowCount() == 0) {
            erro = erro + "Insira algum produto!\n";
        }

        return erro;
    }

    private void limparDados() {
        tfdRemetente.setText("");
        tfdDestinatario.setText("");
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        model.setRowCount(0);
        tblProduto.setModel(model);
        tfdDistancia.setText("");
        tfdTempo.setText("");
        tfdValorFrete.setText("");
        cbEndRemetente.removeAllItems();
        cbEndDestinatario.removeAllItems();
        this.remetente = null;
        this.destinatario = null;
        this.linhaProduto = -1;
        this.quilometragem = new Quilometragem();
        this.frete = new Frete();
        this.frete.setUnidadeAtual(TranSOFT.UNIDADE);
        this.frete.setDataPedido(new Date());
        this.produtosExclusao = new ArrayList<>();
        Controle.permissiona(jTabbedPane1, telaAtual);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditar1;
    private javax.swing.JButton btnExportarXML;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnImportarXML;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.JButton btnSelecionarDestinatario;
    private javax.swing.JButton btnSelecionarRemetente;
    private javax.swing.JComboBox<ComboItens> cbEndDestinatario;
    private javax.swing.JComboBox<ComboItens> cbEndRemetente;
    private javax.swing.JComboBox<ComboItens> cbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblFrete;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField tfdConsulta;
    private javax.swing.JTextField tfdDescricao;
    private javax.swing.JTextField tfdDestinatario;
    private javax.swing.JTextField tfdDistancia;
    private javax.swing.JTextField tfdPeso;
    private javax.swing.JTextField tfdRemetente;
    private javax.swing.JTextField tfdTempo;
    private javax.swing.JTextField tfdValorFrete;
    private javax.swing.JTextField tfdValorProduto;
    // End of variables declaration//GEN-END:variables
}
